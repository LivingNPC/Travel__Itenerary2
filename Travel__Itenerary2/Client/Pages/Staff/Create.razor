@page "/Staffs/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Create New Staff</h3>
<hr />
<br />

<EditForm Model="@staff" OnValidSubmit="CreateStaff">
    <DataAnnotationsValidator />
    <ValidationSummary />


    <div class="form-group">
        <label>Staff Name: </label>
        <div>
            <InputText @bind-Value="@staff.Name" class="form-control" />
            <ValidationMessage For="@(() => staff.Name)" />
        </div>
    </div>

    <div class="form-group">
        <label>Address: </label>
        <div>
            <InputNumber @bind-Value="@staff.Address" class="form-control" />
            <ValidationMessage For="@(() => staff.Address)" />
        </div>
    </div>

    <div class="form-group">
        <label>Contact Number: </label>
        <div>
            <InputNumber @bind-Value="@staff.ContactNumber" class="form-control" />
            <ValidationMessage For="@(() => staff.ContactNumber)" />
        </div>
    </div>

    <div class="form-group">
        <label>Position: </label>
        <div>
            <InputNumber @bind-Value="@staff.Position" class="form-control" />
            <ValidationMessage For="@(() => staff.Position)" />
        </div>
    </div>

    <button type="submit" class="btn btn-success btn-block">
        Create Staff
    </button>
</EditForm>

@code { Staff staff = new Staff();

            private async Task CreateStaff()
            {
                await _client.PostAsJsonAsync(Endpoints.StaffEndpoint, staff);
                _navManager.NavigateTo("/Staffs/");
            } }