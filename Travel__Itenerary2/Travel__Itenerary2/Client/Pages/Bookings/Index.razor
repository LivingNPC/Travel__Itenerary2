@page "/Bookings/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]
@inject HttpInterceptorService _interceptor
@implements IDisposable

<h3 class="card-title"> Bookings </h3>
<br />

<a href="/bookings/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Booking
</a>
<br />
<br />

@if (Booking == null)
{
    <div class="alert alert-info">Loading Bookings...</div>
}

else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>Booking Id</th>
                <th>NRIC</th>
                <th>Date</th>
                <th>Flight</th>
                <th>Hotel</th>
                <th>Package</th>
                <th>Staff</th>
                <th>FlightPrice</th>
                <th>HotelPrice</th>
                <th>PackagePrice</th>
                <th>Total Price</th>
                <th>Actions</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var booking in Booking)
            {
                <tr>

                    <td>@booking.Id</td>
                    <td>@booking.Customers.NRIC</td>
                    <td>@booking.DateTime.Date.ToString("dd MMMM yyyy")</td>
                    <td>@booking.Flights.FlightName</td>
                    <td>@booking.Hotels.HotelName</td>
                    <td>@booking.Package.PackageName</td>
                    <td>@booking.Staff.Name</td>
                    <td class="price">@booking.Flights.FlightPrice </td>
                    <td class="price">@booking.Hotels.HotelPrice</td>
                    <td class="price">@booking.Package.PackagePrice </td>
                    <td><button id="calculate" @onclick=@TotalPrice>Calculate Total<span class="oi oi-calculator"></span></button><p id="total"></p></td>




                    <td>
                        <a href="/bookings/view/@booking.Id" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                        <a href="/bookings/edit/@booking.Id" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" @onclick="@(()=>Delete(booking.Id))">
                            <span class="oi oi-delete"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <br />
    <br />
    <br />
    
}

@code {
    private List<Bookings> Booking;
    private DateTime nullDT = new DateTime(1, 1, 1, 0, 0, 0);
    IJSObjectReference module;
    string value = string.Empty;

    protected async override Task OnInitializedAsync()
    {
        _interceptor.MonitorEvent();
        Booking = await _client.GetFromJsonAsync<List<Bookings>>($"{Endpoints.BookingsEndpoint}");

    }

    async Task Delete(int bookingId)
    {
        var booking = Booking.First(q => q.Id == bookingId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {booking.Id}?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.BookingsEndpoint}/{bookingId}");
            await OnInitializedAsync();
        }
    }
    public void Dispose()
    {
        _interceptor.DisposeEvent();
    }

    async Task TotalPrice()
    {
        module = await js.InvokeAsync<IJSObjectReference>("import", "./Utils.js");
        value = await module.InvokeAsync<string>("displayTotalPrice", "");
    }
}




