@inject HttpClient _client

<EditForm Model="@package" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />


    <div class="form-group">
        <label>PackageName: </label>
        <div>
            <InputText @bind-Value="@package.PackageName" class="form-control" />
            <ValidationMessage For="@(() => package.PackageName)" />
        </div>
    </div>

    <div class="form-group">
        <label>PackagePrice: </label>
        <div>
            <InputNumber @bind-Value="@package.PackagePrice" class="form-control" />
            <ValidationMessage For="@(() => package.PackagePrice)" />
        </div>
    </div>

    <div class="form-group">
        <label>PackageDescription: </label>
        <div>
            <InputText @bind-Value="@package.PackageDescription" class="form-control" />
            <ValidationMessage For="@(() => package.PackageDescription)" />
        </div>
    </div>

    <div class="form-group">
        <label>Package Start: </label>
        <div>
            <InputDate @bind-Value="@package.PackageStart" class="form-control" />
            <ValidationMessage For="@(() => package.PackageStart)" />
        </div>
    </div>

    <div class="form-group">
        <label>Package End: </label>
        <div>
            <InputDate @bind-Value="@package.PackageEnd" class="form-control" />
            <ValidationMessage For="@(() => package.PackageEnd)" />
        </div>
    </div>
    <button type="submit" class="btn btn-success btn-block">
        @ButtonText
    </button>
</EditForm>

@code { [Parameter] public Package package { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Bookings> Bookings;
    private IList<Staff> Staffs;

    protected async override Task OnInitializedAsync()
    {
        Bookings = await _client.GetFromJsonAsync<List<Bookings>>($"{Endpoints.BookingsEndpoint}");
        Staffs = await _client.GetFromJsonAsync<List<Staff>>($"{Endpoints.StaffEndpoint}");

    }

    }